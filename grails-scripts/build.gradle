configurations {
    scripts
}

dependencies {
    // Testing
    compile("org.spockframework:spock-core:${spockVersion}") {
        exclude group:'junit', module: 'junit-dep'
        exclude group:'org.codehaus.groovy', module: 'groovy-all'
    }
    compile "junit:junit:${junitVersion}", {
        exclude group:'org.hamcrest', module: 'hamcrest-core'
    }

    scripts project(":grails-web"),
            project(':grails-docs'),
            project(':grails-plugin-controllers'),
            project(':grails-plugin-log4j'),
            project(":grails-test"),
            project(":grails-plugin-testing"),
            project(":grails-project-api"),
            project(":grails-resources")

    compile "org.fusesource.jansi:jansi:$jansiVersion",
        "jline:jline:$jlineVersion",
        "net.java.dev.jna:jna:$jnaVersion"

    // Ant
    compile "org.apache.ant:ant:${antVersion}",
        "org.apache.ant:ant-launcher:${antVersion}",
        "org.apache.ivy:ivy:${ivyVersion}"

    compile "org.apache.ant:ant-trax:${antTraxVersion}", {
        exclude group:"org.apache.ant", module:"ant"
    }

    compile("org.apache.ant:ant-junit:${antVersion}") {
        exclude group:'junit',module:'junit'
    }

    compile("org.codehaus.gant:gant_groovy1.8:${gantVersion}") {
        exclude group:'commons-cli', module:'commons-cli'
        exclude group:'org.apache.ant', module:'ant'
    }
}

sourceSets {
    main {
        compileClasspath += files(configurations.scripts)
        groovy.srcDirs = ['src/main/scripts']
    }
}


eclipse {
    classpath {
        plusConfigurations += [configurations.scripts]
    }
}
