package org.grails.cli.gradle

import org.grails.cli.profile.ProjectContext

import spock.lang.Specification

class GradleConnectionCommandLineHandlerSpec extends Specification {
    def "should list all available gradle task selectors in root project"() {
        given:
        ProjectContext projectContext = Mock(ProjectContext)
        GradleConnectionCommandLineHandler gradleHandler = new GradleConnectionCommandLineHandler()
        when:
        def taskSelectors = gradleHandler.listAllTaskSelectors(projectContext)
        then:
        projectContext.getBaseDir() >> new File("src/test/resources/gradle-sample")
        taskSelectors == [
            'assemble',
            'build',
            'buildDependents',
            'buildNeeded',
            'check',
            'classes',
            'clean',
            'compileJava',
            'compileTestJava',
            'components',
            'dependencies',
            'dependencyInsight',
            'hello',
            'hello2',
            'hello3',
            'help',
            'init',
            'jar',
            'javadoc',
            'processResources',
            'processTestResources',
            'projects',
            'properties',
            'tasks',
            'test',
            'testClasses',
            'wrapper',
            ':assemble',
            ':build',
            ':buildDependents',
            ':buildNeeded',
            ':check',
            ':classes',
            ':clean',
            ':compileJava',
            ':compileTestJava',
            ':components',
            ':dependencies',
            ':dependencyInsight',
            ':help',
            ':init',
            ':jar',
            ':javadoc',
            ':processResources',
            ':processTestResources',
            ':projects',
            ':properties',
            ':tasks',
            ':test',
            ':testClasses',
            ':wrapper',
            ':subproj:assemble',
            ':subproj:build',
            ':subproj:buildDependents',
            ':subproj:buildNeeded',
            ':subproj:check',
            ':subproj:classes',
            ':subproj:clean',
            ':subproj:compileJava',
            ':subproj:compileTestJava',
            ':subproj:components',
            ':subproj:dependencies',
            ':subproj:dependencyInsight',
            ':subproj:hello',
            ':subproj:hello2',
            ':subproj:help',
            ':subproj:jar',
            ':subproj:javadoc',
            ':subproj:processResources',
            ':subproj:processTestResources',
            ':subproj:projects',
            ':subproj:properties',
            ':subproj:tasks',
            ':subproj:test',
            ':subproj:testClasses',
            ':subproj2:assemble',
            ':subproj2:build',
            ':subproj2:buildDependents',
            ':subproj2:buildNeeded',
            ':subproj2:check',
            ':subproj2:classes',
            ':subproj2:clean',
            ':subproj2:compileJava',
            ':subproj2:compileTestJava',
            ':subproj2:components',
            ':subproj2:dependencies',
            ':subproj2:dependencyInsight',
            ':subproj2:hello',
            ':subproj2:hello3',
            ':subproj2:help',
            ':subproj2:jar',
            ':subproj2:javadoc',
            ':subproj2:processResources',
            ':subproj2:processTestResources',
            ':subproj2:projects',
            ':subproj2:properties',
            ':subproj2:tasks',
            ':subproj2:test',
            ':subproj2:testClasses'
        ] as Set
    }

    def "should list all available gradle task selectors in subproject"() {
        given:
        ProjectContext projectContext = Mock(ProjectContext)
        GradleConnectionCommandLineHandler gradleHandler = new GradleConnectionCommandLineHandler()
        when:
        def taskSelectors = gradleHandler.listAllTaskSelectors(projectContext)
        then:
        projectContext.getBaseDir() >> new File("src/test/resources/gradle-sample/subproj")
        taskSelectors == [
            'assemble',
            'build',
            'buildDependents',
            'buildNeeded',
            'check',
            'classes',
            'clean',
            'compileJava',
            'compileTestJava',
            'components',
            'dependencies',
            'dependencyInsight',
            'hello',
            'hello2',
            'help',
            'jar',
            'javadoc',
            'processResources',
            'processTestResources',
            'projects',
            'properties',
            'tasks',
            'test',
            'testClasses',
            ':assemble',
            ':build',
            ':buildDependents',
            ':buildNeeded',
            ':check',
            ':classes',
            ':clean',
            ':compileJava',
            ':compileTestJava',
            ':components',
            ':dependencies',
            ':dependencyInsight',
            ':help',
            ':init',
            ':jar',
            ':javadoc',
            ':processResources',
            ':processTestResources',
            ':projects',
            ':properties',
            ':tasks',
            ':test',
            ':testClasses',
            ':wrapper',
            ':subproj:assemble',
            ':subproj:build',
            ':subproj:buildDependents',
            ':subproj:buildNeeded',
            ':subproj:check',
            ':subproj:classes',
            ':subproj:clean',
            ':subproj:compileJava',
            ':subproj:compileTestJava',
            ':subproj:components',
            ':subproj:dependencies',
            ':subproj:dependencyInsight',
            ':subproj:hello',
            ':subproj:hello2',
            ':subproj:help',
            ':subproj:jar',
            ':subproj:javadoc',
            ':subproj:processResources',
            ':subproj:processTestResources',
            ':subproj:projects',
            ':subproj:properties',
            ':subproj:tasks',
            ':subproj:test',
            ':subproj:testClasses',
            ':subproj2:assemble',
            ':subproj2:build',
            ':subproj2:buildDependents',
            ':subproj2:buildNeeded',
            ':subproj2:check',
            ':subproj2:classes',
            ':subproj2:clean',
            ':subproj2:compileJava',
            ':subproj2:compileTestJava',
            ':subproj2:components',
            ':subproj2:dependencies',
            ':subproj2:dependencyInsight',
            ':subproj2:hello',
            ':subproj2:hello3',
            ':subproj2:help',
            ':subproj2:jar',
            ':subproj2:javadoc',
            ':subproj2:processResources',
            ':subproj2:processTestResources',
            ':subproj2:projects',
            ':subproj2:properties',
            ':subproj2:tasks',
            ':subproj2:test',
            ':subproj2:testClasses'
        ] as Set
    }
}
