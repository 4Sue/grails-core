configurations {
    optional
}
dependencies {

    compile 'javax.servlet:javax.servlet-api:3.0.1', provided
    compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
    compile( "commons-validator:commons-validator:1.3.1" ) {
        exclude group: 'xml-apis', module:'xml-apis'
        exclude group: 'commons-digester', module:'commons-digester'
        exclude group: 'commons-logging', module:'commons-logging'
        exclude group: 'commons-beanutils', module:'commons-beanutils'
    }
    compile( "com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:${concurrentlinkedhashmapVersion}" ) {
        exclude group: 'commons-logging', module:'commons-logging'
    }
    compile("org.springframework:spring-core:${springVersion}") {
        exclude group: 'commons-logging', module:'commons-logging'
    }
    compile("org.springframework:spring-tx:${springVersion}") {
        exclude group: 'commons-logging', module:'commons-logging'
    }
    // TODO: Should haven't web dependencies in core, remove
    compile("org.springframework:spring-web:${springVersion}") {
        exclude group: 'commons-logging', module:'commons-logging'
    }
    compile("org.springframework:spring-beans:${springVersion}") {
        exclude group: 'commons-logging', module:'commons-logging'
    }
    compile("org.springframework:spring-context:${springVersion}") {
        exclude group: 'commons-logging', module:'commons-logging'
    }
    compile("org.springframework:spring-test:${springVersion}") {
        exclude group: 'commons-logging', module:'commons-logging'
        ext.notInPom = true
    }

    runtime 'oro:oro:2.0.8' // Required by commons-validator. TODO: split validation out of grails-core
    runtime 'cglib:cglib:2.2.2' // Used to generate proxies for classes via Spring AOP
    runtime 'asm:asm:3.3.1'

    // Used by Spring AOP
    runtime 'aopalliance:aopalliance:1.0',
            "org.aspectj:aspectjrt:$aspectjVersion"

    // legacy, and not included in published POM
    runtime "org.springframework:spring-jms:${springVersion}", {
        ext.notInPom = true
    }
    runtime ( 'xalan:serializer:2.7.1' ) {
        exclude group: 'xml-apis', module:'xml-apis'
    }

    compile ("org.springsource.springloaded:springloaded-core:$springLoadedVersion") {
        ext.notInPom = true
    }



    compile project(":grails-bootstrap"), {
        exclude group:"org.fusesource.jansi", module:"jansi"
        exclude group:"jline", module:"jline"
        exclude group:"net.java.dev.jna", module:"jna"

        // Ant
        exclude group:"org.apache.ant", module:"ant"
        exclude group:"org.apache.ant", module:"ant-launcher"
        exclude group:"org.apache.ivy", module:"ivy"
        exclude group:"org.apache.ant", module:"ant-trax"
        exclude group:"org.apache.ant", module:"ant-junit"

        exclude group:"org.codehaus.gant", module:"gant_groovy1.8"
    }

    optional "org.apache.ant:ant:${antVersion}"
    optional "jline:jline:$jlineVersion"
    optional "org.fusesource.jansi:jansi:$jansiVersion"

    optional("org.codehaus.gant:gant_groovy1.8:${gantVersion}") {
        exclude group:'commons-cli', module:'commons-cli'
    }
    compile project(":grails-spring"), {
        exclude group:'org.springframework', module:'spring-tx'
        exclude group:'org.springframework', module:'spring-web'
        exclude group:'org.grails', module:'grails-bootstrap'
    }
}

sourceSets {
    main {
        compileClasspath += files(configurations.optional)
    }
    test {
        compileClasspath += files(configurations.optional)
        runtimeClasspath += files(configurations.optional)
    }
}
javadoc.classpath += files(configurations.optional)
compileGroovy.doFirst {
    delete("${buildDir}/classes/main/META-INF")
    ant.mkdir(dir:sourceSets.main.output.classesDir)
    ant.propertyfile(file:"${sourceSets.main.output.classesDir}/grails.build.properties") {
         entry key:"grails.version", value:version
    }
}
