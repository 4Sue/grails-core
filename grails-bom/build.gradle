
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

publishing {

    if(isBuildSnapshot) {
        repositories {
            maven {
                credentials {
                    def u = System.getenv("ARTIFACTORY_USERNAME") ?: project.hasProperty("artifactoryPublishUsername") ? project.artifactoryPublishUsername : ''
                    def p = System.getenv("ARTIFACTORY_PASSWORD") ?: project.hasProperty("artifactoryPublishPassword") ? project.artifactoryPublishPassword : ''
                    username = u
                    password = p
                }
                url  "https://repo.grails.org/grails/libs-snapshots-local"
            }
        }
    }

    publications {
        maven(MavenPublication) {
            pom.withXml {
                def xml = asNode()
                def plugins = new Properties()
                plugins.load(new StringReader(new File("$projectDir/plugins.properties").text))

                xml.children().last() + {
                    delegate.name "Grails BOM"
                    delegate.description "Grails default supported dependency definitions"
                    delegate.url 'http://grails.org'
                    delegate.licenses {
                        delegate.license {
                            delegate.name "Apache License, Version 2.0"
                            delegate.url 'http://www.apache.org/licenses/LICENSE-2.0'
                        }
                    }
                    delegate.scm {
                        delegate.url 'scm:git@github.com:grails/grails-core.git'
                        delegate.connection 'scm:git@github.com:grails/grails-core.git'
                        delegate.developerConnection 'scm:git@github.com:grails/grails-core.git'
                    }

                    delegate.developers {
                        delegate.developer {
                            delegate.id 'graemerocher'
                            delegate.name 'Graeme Rocher'
                        }
                        delegate.developer {
                            delegate.id 'jeffscottbrown'
                            delegate.name 'Jeff Brown'
                        }
                        delegate.developer {
                            delegate.id 'burtbeckwith'
                            delegate.name 'Burt Beckwith'
                        }
                    }

                    delegate.dependencyManagement {
                        delegate.dependencies {
                            for(sub in project.parent.subprojects) {
                                if(sub.name == 'grails-bom') continue

                                delegate.dependency {
                                    delegate.groupId sub.group
                                    delegate.artifactId sub.name
                                    delegate.version( sub.version )
                                    if(sub.name == 'grails-dependencies') {
                                        delegate.type 'pom'
                                    }
                                }
                            }

                            for(plugin in plugins) {
                                delegate.dependency {
                                    delegate.groupId 'org.grails.plugins'
                                    delegate.artifactId plugin.key
                                    delegate.version( plugin.value )
                                }
                            }
                        }
                    }
                }
            }

        }
    }
}


bintray {
    def u = System.getenv("BINTRAY_USER") ?: project.hasProperty("bintrayUser") ? project.bintrayUser : ''
    def p = System.getenv("BINTRAY_KEY") ?: project.hasProperty("bintrayKey") ? project.bintrayKey : ''

    user = u
    key = p
    publications = ['maven']
    publish = true
    pkg {
        repo = 'grails-core'
        userOrg = 'grails'
        name = 'org.grails'
        desc = 'Grails Framework'
        websiteUrl = 'http://grails.org'
        issueTrackerUrl = 'http://jira.grails.org/browse/GRAILS'
        vcsUrl = 'http://jira.grails.org/browse/GRAILS'
        licenses = ['Apache-2.0']
        publicDownloadNumbers = true
        version {
            name = project.version
            gpg {
                sign = true
                passphrase = System.getenv("SIGNING_PASSPHRASE") ?: project.hasProperty("signingPassphrase") ? project.signingPassphrase : ''
            }
            mavenCentralSync {
                sync = false
                def ossUser = System.getenv("SONATYPE_USERNAME") ?: project.hasProperty("sonatypeOssUsername") ? project.sonatypeOssUsername : ''
                def ossPass = System.getenv("SONATYPE_PASSWORD") ?: project.hasProperty("sonatypeOssPassword") ? project.sonatypeOssPassword : ''
                user = ossUser
                password = ossPass
            }

        }
    }
}


