ext {
    aetherVersion = "1.0.0.v20140518"
    aetherProviderVersion = "0.9.0.M2"
    mavenVersion = "3.2.1"
}

dependencies {
    compile("org.eclipse.aether:aether-api:${aetherVersion}")
    compile("org.eclipse.aether:aether-util:${aetherVersion}")
    compile("org.eclipse.aether:aether-impl:${aetherVersion}")
    compile("org.eclipse.aether:aether-connector-file:${aetherProviderVersion}")
    compile("org.eclipse.aether:aether-connector-basic:${aetherVersion}")
    compile("org.eclipse.aether:aether-transport-http:${aetherVersion}")
    compile("org.eclipse.aether:aether-transport-file:${aetherVersion}")
    compile("org.apache.maven:maven-aether-provider:$mavenVersion")
    compile "org.apache.maven:maven-settings-builder:$mavenVersion"
    compile 'org.eclipse.sisu:org.eclipse.sisu.plexus:0.0.0.M5'

    compile project(":grails-bootstrap")

    runtime "org.slf4j:slf4j-simple:$slf4jVersion"
}

project.tasks.withType(org.gradle.api.publish.maven.tasks.PublishToMavenLocal) { Task t ->

    t..doLast {
        final aetherConf = new File(rootProject.projectDir, "conf/aether-starter.conf")
        aetherConf.parentFile.mkdirs()

        aetherConf.withPrintWriter { writer ->
            writer.println "load \${grails.home}/dist/grails-aether-${grailsVersion}.jar"
            def appendDependencies = {
                def fileName = it.file.name
                if(! ['jline', 'jansi','jna','hibernate', 'asm', 'cglib', 'groovy-all', 'ant', 'servlet-api'].any { fileName.contains(it) }) {

                    def mid = it.moduleVersion.id

                    writer.println "load \${grails.home}/lib/${mid.group}/${mid.name}/jars/$fileName"
                }
            }
            configurations.runtime.resolvedConfiguration.resolvedArtifacts.each appendDependencies
        }
    }

}